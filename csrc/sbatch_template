#! /usr/bin/env bash
#SBATCH -A ops
#SBATCH -t {{ time }}
#SBATCH -N {{ nodes }}
#SBATCH -n {{ procs }}
#SBATCH -p phi
#SBATCH -o slurm.{{ hash }}.out
#SBATCH -e slurm.{{ hash }}.err

run_id="{{ hash }}"
method="{{ method }}"
data_per_node="{{ data }}"
num_procs={{ procs }}
num_nodes={{ nodes }}
num_loops_sn="5 * (10 ^ 5)"
# num_loops_sn="10"
num_loops=$( echo "$num_loops_sn" | bc)
mpi_version="{{ mpi }}"

cmds=(                          				\
    "module purge"              				\
    "module load gcc/7.3.0"     				\
    "module load $mpi_version"  				\
    "which mpirun"              				\
    "which mpicc"               				\
    "make opt"                  				\
    "ldd treegather.bin"        				\
)

# printing out commands ran to build and run the program
for cmd in "${cmds[@]}"
do
    echo 'bash> ' $cmd
    echo
    eval $cmd
done

touch start.{{ hash }}.time
mpirun -np $num_procs ./treegather.bin \
    --gather-method $method \
    --num-loops $num_loops \
    --data-per-node $(echo $data_per_node | bc)
touch end.{{ hash }}.time

echo
time=$(ls --full-time start.{{ hash }}.time end.{{ hash }}.time \
    | cut -f7 -d' ' \
    | tr '\n' ';' \
    | sed 's/;//2')
printf "MPI($mpi_version) DATA/PROC($data_per_node) METHOD($method) NUM PROCS($num_procs) NUM NODES($num_nodes) NUM LOOPS($num_loops_sn)\nTIME($time)\n"
